// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ProyectoDbContext))]
    partial class ProyectoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared.Entidades.Administrador", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_ID"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLogIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_ID");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Shared.Entidades.Canchas", b =>
                {
                    b.Property<int>("Cancha_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cancha_ID"));

                    b.Property<int>("Deporte_ID")
                        .HasColumnType("int");

                    b.HasKey("Cancha_ID");

                    b.HasIndex("Deporte_ID");

                    b.ToTable("Canchas");
                });

            modelBuilder.Entity("Shared.Entidades.Clientes", b =>
                {
                    b.Property<int>("Cliente_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cliente_ID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.HasKey("Cliente_ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Shared.Entidades.ConsumicionProducto", b =>
                {
                    b.Property<int>("ConsumicionProducto_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumicionProducto_ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Consumicion_ID")
                        .HasColumnType("int");

                    b.Property<int>("Producto_ID")
                        .HasColumnType("int");

                    b.Property<int?>("TurnosTurno_ID")
                        .HasColumnType("int");

                    b.HasKey("ConsumicionProducto_ID");

                    b.HasIndex("Consumicion_ID");

                    b.HasIndex("Producto_ID");

                    b.HasIndex("TurnosTurno_ID");

                    b.ToTable("consumicionProductos");
                });

            modelBuilder.Entity("Shared.Entidades.ConsumicionXturno", b =>
                {
                    b.Property<int>("ConsumicionXturno_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumicionXturno_ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Producto_ID")
                        .HasColumnType("int");

                    b.Property<int>("Turno_ID")
                        .HasColumnType("int");

                    b.HasKey("ConsumicionXturno_ID");

                    b.HasIndex("Producto_ID");

                    b.HasIndex("Turno_ID");

                    b.ToTable("consumicionXturnos");
                });

            modelBuilder.Entity("Shared.Entidades.Consumiciones", b =>
                {
                    b.Property<int>("Consumicion_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Consumicion_ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Consumicion_ID");

                    b.ToTable("Consumiciones");
                });

            modelBuilder.Entity("Shared.Entidades.Deportes", b =>
                {
                    b.Property<int>("Deporte_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Deporte_ID"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Deporte_ID");

                    b.ToTable("Deportes");
                });

            modelBuilder.Entity("Shared.Entidades.Elementos", b =>
                {
                    b.Property<int>("Elemento_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Elemento_ID"));

                    b.Property<int>("Cancha_ID")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Elemento_ID");

                    b.HasIndex("Cancha_ID");

                    b.ToTable("Elementos");
                });

            modelBuilder.Entity("Shared.Entidades.Productos", b =>
                {
                    b.Property<int>("Producto_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Producto_ID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Proveedor_ID")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Producto_ID");

                    b.HasIndex("Proveedor_ID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Shared.Entidades.Proveedores", b =>
                {
                    b.Property<int>("Proveedor_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Proveedor_ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Proveedor_ID");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Shared.Entidades.Turnos", b =>
                {
                    b.Property<int>("Turno_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Turno_ID"));

                    b.Property<int>("Admin_ID")
                        .HasColumnType("int");

                    b.Property<int>("Cancha_ID")
                        .HasColumnType("int");

                    b.Property<int>("Cliente_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Turno_ID");

                    b.HasIndex("Admin_ID");

                    b.HasIndex("Cancha_ID");

                    b.HasIndex("Cliente_ID");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Canchas", b =>
                {
                    b.HasOne("Shared.Entidades.Deportes", "Deporte")
                        .WithMany("Canchas")
                        .HasForeignKey("Deporte_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deporte");
                });

            modelBuilder.Entity("Shared.Entidades.ConsumicionProducto", b =>
                {
                    b.HasOne("Shared.Entidades.Consumiciones", "Consumicion")
                        .WithMany("ConsumicionProductos")
                        .HasForeignKey("Consumicion_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Entidades.Productos", "Producto")
                        .WithMany("ConsumicionProductos")
                        .HasForeignKey("Producto_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Entidades.Turnos", null)
                        .WithMany("ConsumicionProductos")
                        .HasForeignKey("TurnosTurno_ID");

                    b.Navigation("Consumicion");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Shared.Entidades.ConsumicionXturno", b =>
                {
                    b.HasOne("Shared.Entidades.Productos", "Productos")
                        .WithMany()
                        .HasForeignKey("Producto_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Entidades.Turnos", "Turnos")
                        .WithMany()
                        .HasForeignKey("Turno_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productos");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Elementos", b =>
                {
                    b.HasOne("Shared.Entidades.Canchas", "Canchas")
                        .WithMany("Elementos")
                        .HasForeignKey("Cancha_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canchas");
                });

            modelBuilder.Entity("Shared.Entidades.Productos", b =>
                {
                    b.HasOne("Shared.Entidades.Proveedores", "Proveedores")
                        .WithMany("Productos")
                        .HasForeignKey("Proveedor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Shared.Entidades.Turnos", b =>
                {
                    b.HasOne("Shared.Entidades.Administrador", "Administrador")
                        .WithMany("Turnos")
                        .HasForeignKey("Admin_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Entidades.Canchas", "Canchas")
                        .WithMany("Turnos")
                        .HasForeignKey("Cancha_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Entidades.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cliente_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Canchas");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Shared.Entidades.Administrador", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Canchas", b =>
                {
                    b.Navigation("Elementos");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Shared.Entidades.Consumiciones", b =>
                {
                    b.Navigation("ConsumicionProductos");
                });

            modelBuilder.Entity("Shared.Entidades.Deportes", b =>
                {
                    b.Navigation("Canchas");
                });

            modelBuilder.Entity("Shared.Entidades.Productos", b =>
                {
                    b.Navigation("ConsumicionProductos");
                });

            modelBuilder.Entity("Shared.Entidades.Proveedores", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Shared.Entidades.Turnos", b =>
                {
                    b.Navigation("ConsumicionProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
